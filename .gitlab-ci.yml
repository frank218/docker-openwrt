variables:
  CI_IMAGE: $DOCKER_HUB_USER/openwrt
  RELEASE: "19.07.5"

.build:
  image: docker:latest
  stage: build
  services:
   - docker:dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  script:
    - export OPENWRT_SOURCE_VER=$RELEASE
    - export ARCH=$ARCH
    - export IMAGE=$CI_IMAGE
    - export TAG=${RELEASE}-${ARCH}
    - ./build.sh
    - docker push $CI_IMAGE:${RELEASE}-${ARCH}
  # only:
  #   - master

.build-loopmount:
  extends: .build
  variables:
    LOOP_ARGS: '=/tmp/dev/loop0'
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - apk add util-linux
    - |
      mkdir -p /tmp/dev
      mount -t devtmpfs none /tmp/dev
      for i in $(seq 0 9); do
        mknod -m 0660 "/tmp/dev/loop$i" b 7 "$i"
      done

build-release-x86-64:
  extends: .build
  variables:
    ARCH: x86-64

build-release-armvirt-64:
  extends: .build
  variables:
    ARCH: armvirt-64

build-release-armvirt-32:
  extends: .build
  variables:
    ARCH: armvirt-32

build-release-bcm2708:
  extends: .build-loopmount
  variables:
    ARCH: bcm2708

build-snapshot-x86-64:
  extends: .build
  variables:
    ARCH: x86-64
    RELEASE: snapshot

build-snapshot-armvirt-64:
  extends: .build
  variables:
    ARCH: armvirt-64
    RELEASE: snapshot

build-snapshot-armvirt-32:
  extends: .build
  variables:
    ARCH: armvirt-32
    RELEASE: snapshot

build-snapshot-bcm2708:
  extends: .build-loopmount
  variables:
    ARCH: bcm2708
    RELEASE: snapshot